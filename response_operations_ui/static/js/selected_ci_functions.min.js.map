{"version":3,"file":"js/selected_ci_functions.min.js","mappings":";;;;;AAAAA,MAAM,CAACC,MAAM,GAAG,YAAY;EACzB,IAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,uBAAuB,CAAC;EAEpE,IAAIF,YAAY,EAAE;IACd,IAAMG,YAAY,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,sBAAsB,CAAC;IACtEJ,YAAY,CAACK,OAAO,GAAG,UAAUC,EAAE,EAAE;MACjC,IAAIN,YAAY,CAACO,SAAS,KAAK,cAAc,EAAE;QAC3CC,WAAW,CAAC,KAAK,EAAEL,YAAY,EAAEG,EAAE,CAAC;MACxC,CAAC,MAAM;QACHE,WAAW,CAAC,IAAI,EAAEL,YAAY,EAAEG,EAAE,CAAC;MACvC;IACJ,CAAC;IAED,EAAE,CAACG,OAAO,CAACC,IAAI,CAACP,YAAY,EAAE,UAAUQ,EAAE,EAAE;MACxCA,EAAE,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;QACtCC,aAAa,CAAC,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ,CAAC;AAED,SAASL,WAAWA,CAAEM,QAAQ,EAAEX,YAAY,EAAEG,EAAE,EAAE;EAC9C,IAAIS,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,YAAY,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;IACtCZ,YAAY,CAACY,CAAC,CAAC,CAACE,OAAO,GAAGH,QAAQ;IAClCR,EAAE,CAACY,cAAc,CAAC,CAAC;EACvB;EACAL,aAAa,CAAC,CAAC;AACnB;AAEA,SAASA,aAAaA,CAAA,EAAG;EACrB,IAAMM,YAAY,GAAGlB,QAAQ,CAACG,gBAAgB,CAAC,sBAAsB,CAAC,CAACY,MAAM;EAC7E,IAAII,cAAc,GAAGnB,QAAQ,CAACG,gBAAgB,CAAC,8BAA8B,CAAC,CAACY,MAAM;EAErFf,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACmB,SAAS,GAAGD,cAAc,GAAG,mBAAmB,GAAGD,YAAY,GAAG,YAAY;EAE1H,IAAIA,YAAY,GAAGC,cAAc,EAAE;IAC/BnB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,SAAS,GAAG,YAAY;EACtE,CAAC,MAAM;IACHN,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,SAAS,GAAG,cAAc;EACxE;AACJ,C","sources":["webpack://response-operations-ui/./response_operations_ui/assets/js/selected_ci_functions.js"],"sourcesContent":["window.onload = function () {\n   const selectButton = document.getElementById('select-or-unselect-ci');\n    \n    if (selectButton) {\n        const ciCheckBoxes = document.querySelectorAll(\"input[type=checkbox]\");\n        selectButton.onclick = function (ev) {\n            if (selectButton.innerText === \"Unselect all\") {\n                ciSelection(false, ciCheckBoxes, ev)\n            } else {\n                ciSelection(true, ciCheckBoxes, ev)\n            }\n        };\n    \n        [].forEach.call(ciCheckBoxes, function (ci) {\n            ci.addEventListener(\"change\", function () {\n                ciTextUpdates()\n            });\n        });\n    }\n}\n\nfunction ciSelection (selected, ciCheckBoxes, ev) {\n    let i;\n    for (i = 0; i < ciCheckBoxes.length; i++) {\n        ciCheckBoxes[i].checked = selected;\n        ev.preventDefault();\n    }\n    ciTextUpdates()\n}\n\nfunction ciTextUpdates() {\n    const totalCIAvail = document.querySelectorAll(\"input[type=checkbox]\").length;\n    let totalCIChecked = document.querySelectorAll(\"input[type=checkbox]:checked\").length;\n\n    document.getElementById(\"ci-checked-count\").innerHTML = totalCIChecked + \" selected out of \" + totalCIAvail + \" available\";\n\n    if (totalCIAvail > totalCIChecked) {\n        document.getElementById('selection-text').innerText = \"Select all\";\n    } else {\n        document.getElementById('selection-text').innerText = \"Unselect all\";\n    }\n}\n"],"names":["window","onload","selectButton","document","getElementById","ciCheckBoxes","querySelectorAll","onclick","ev","innerText","ciSelection","forEach","call","ci","addEventListener","ciTextUpdates","selected","i","length","checked","preventDefault","totalCIAvail","totalCIChecked","innerHTML"],"sourceRoot":""}