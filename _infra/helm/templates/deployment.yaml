apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge:
      maxUnavailable:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: "{{ .Values.env }}"
      version: "v1.2"
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: "{{ .Values.env }}"
        version: "v1.2"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "eu.gcr.io/rm-ras-sandbox/{{ .Values.image.repositoryName }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http-server
              containerPort: 8094
          readinessProbe:
            httpGet:
              path: /info
              port: 8094
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: 8094
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: DB_HOST
            value: $(POSTGRES_SERVICE_HOST)
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-port
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-name
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: PORT
            value: "8094"
          - name: CASE_URL
            value: "http://$(CASESVC_SERVICE_HOST):$(CASESVC_SERVICE_PORT)"
          - name: CASE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: CASE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: COLLECTION_EXERCISE_URL
            value: "http://$(COLLECTIONEXERCISESVC_SERVICE_HOST):$(COLLECTIONEXERCISESVC_SERVICE_PORT)"
          - name: COLLECTION_EXERCISE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: COLLECTION_EXERCISE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: COLLECTION_INSTRUMENT_URL
            value: "http://$(RAS_COLLECTION_INSTRUMENT_SERVICE_HOST):$(RAS_COLLECTION_INSTRUMENT_SERVICE_PORT)"
          - name: COLLECTION_INSTRUMENT_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: COLLECTION_INSTRUMENT_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: IAC_URL
            value: "http://$(IACSVC_SERVICE_HOST):$(IACSVC_SERVICE_PORT)"
          - name: IAC_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: IAC_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: PARTY_URL
            value: "http://$(RAS_PARTY_SERVICE_HOST):$(RAS_PARTY_SERVICE_PORT)"
          - name: PARTY_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: PARTY_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: REDIS_HOST
            value: "$(REDIS_MASTER_SERVICE_HOST)"
          - name: REDIS_PORT
            value: "$(REDIS_MASTER_SERVICE_PORT)"
          - name: REDIS_DB
            value: "3"
          - name: REPORT_URL
            value: "http://$(RM_REPORTING_SERVICE_HOST):$(RM_REPORTING_SERVICE_PORT)"
          - name: SAMPLE_URL
            value: "http://$(SAMPLESVC_SERVICE_HOST):$(SAMPLESVC_SERVICE_PORT)"
          - name: SAMPLE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: SAMPLE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: SURVEY_URL
            value: "http://$(SURVEYSVC_SERVICE_HOST):$(SURVEYSVC_SERVICE_PORT)"
          - name: SURVEY_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: SURVEY_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: SECURE_MESSAGE_URL
            value: "http://$(RAS_SECURE_MESSAGE_SERVICE_HOST):$(RAS_SECURE_MESSAGE_SERVICE_PORT)"
          - name: RAS_SECURE_MESSAGING_JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: jwt-secret
          - name: UAA_SERVICE_URL
            value: "http://$(UAA_SERVICE_HOST):$(UAA_SERVICE_PORT)"
          - name: UAA_CLIENT_ID
            value: "response_operations"
          - name: UAA_CLIENT_SECRET
            value: "password"
          - name: ZIPKIN_DSN
            value: "http://$(ZIPKIN_SERVICE_HOST):$(ZIPKIN_SERVICE_PORT)/api/v1/spans"
          - name: ZIPKIN_SAMPLE_RATE
            value: "100"
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
