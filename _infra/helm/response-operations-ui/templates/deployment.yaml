apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: {{ .Values.env }}
    spec:
      volumes:
        - name: google-cloud-key
          secret:
            secretName: google-application-credentials
      containers:
        - name: {{ .Chart.Name }}
          {{- if eq .Values.image.tag "latest"}}
          image: "{{ .Values.image.name }}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          {{- else}}
          image: "{{ .Values.image.devRepo }}/{{ .Chart.Name }}:{{ .Values.image.tag }}"
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
          ports:
            - name: http-server
              containerPort: {{ .Values.container.port }}
          readinessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: PORT
            value: "{{ .Values.container.port }}"
          - name: GOOGLE_CLOUD_PROJECT
            value: "{{ .Values.gcp.project }}"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/credentials.json
          - name: PUBSUB_TOPIC
            value: "{{ .Values.gcp.topic }}"
          - name: CASE_URL
            {{- if .Values.dns.enabled }}
            value: "http://case.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(CASE_SERVICE_HOST):$(CASE_SERVICE_PORT)"
            {{- end }}
          - name: COLLECTION_EXERCISE_URL
            {{- if .Values.dns.enabled }}
            value: "http://collection-exercise.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(COLLECTION_EXERCISE_SERVICE_HOST):$(COLLECTION_EXERCISE_SERVICE_PORT)"
            {{- end }}
          - name: COLLECTION_INSTRUMENT_URL
            {{- if .Values.dns.enabled }}
            value: "http://collection-instrument.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(COLLECTION_INSTRUMENT_SERVICE_HOST):$(COLLECTION_INSTRUMENT_SERVICE_PORT)"
            {{- end }}
          - name: BANNER_SERVICE_URL
            {{- if .Values.dns.enabled }}
            value: "http://banner-api.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(BANNER_API_SERVICE_HOST):$(BANNER_API_SERVICE_PORT)"
            {{- end }}
          - name: CREATE_ACCOUNT_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rops
                key: create-account-password
          - name: CREATE_ACCOUNT_EMAIL_TOKEN_EXPIRY
            value: "{{ .Values.admin.createAccountEmailExpiry }}"
          - name: UPDATE_ACCOUNT_EMAIL_TOKEN_EXPIRY
            value: "{{ .Values.admin.updateAccountEmailExpiry }}"
          - name: DASHBOARD_URL
            {{- if .Values.dashboard.hasIngress }}
            value: {{ .Values.dashboard.address }}
            {{- else if .Values.dns.enabled }}
            value: "http://responses-dashboard.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(RESPONSES_DASHBOARD_SERVICE_HOST):$(RESPONSES_DASHBOARD_SERVICE_PORT)"
            {{- end }}
          {{- if .Values.analytics.enabled }}
          - name: GOOGLE_ANALYTICS_ID
            value: "{{ .Values.analytics.id }}"
          - name: GOOGLE_TAG_MANAGER
            value: "{{ .Values.analytics.tagManager }}"
          - name: GOOGLE_TAG_MANAGER_PROP
            value: "{{ .Values.analytics.tagManagerProp }}"
          {{- end }}
          - name: IAC_URL
            {{- if .Values.dns.enabled }}
            value: "http://iac.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(IAC_SERVICE_HOST):$(IAC_SERVICE_PORT)"
            {{- end }}
          - name: NOTIFY_CONFIRM_CREATE_ACCOUNT_TEMPLATE
            value: {{ .Values.notify.confirmCreateAccountTemplate }}
          - name: NOTIFY_CONFIRM_PASSWORD_CHANGE_TEMPLATE
            value: {{ .Values.notify.confirmPasswordChangeTemplate }}
          - name: NOTIFY_REQUEST_CREATE_ACCOUNT_TEMPLATE
            value: {{ .Values.notify.requestCreateAccountTemplate }}
          - name: NOTIFY_REQUEST_PASSWORD_CHANGE_TEMPLATE
            value: {{ .Values.notify.requestPasswordChangeTemplate }}
          - name: NOTIFY_UPDATE_ACCOUNT_DETAILS_TEMPLATE
            value: {{ .Values.notify.updateAccountDetailsTemplate }}
          - name: NOTIFY_UPDATE_EMAIL_TEMPLATE
            value: {{ .Values.notify.updateAccountEmailTemplate }}
          - name: NOTIFY_UPDATE_ACCOUNT_PASSWORD_CHANGE_TEMPLATE
            value: {{ .Values.notify.updateAccountPasswordTemplate }}
          - name: PARTY_URL
            {{- if .Values.dns.enabled }}
            value: "http://party.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(PARTY_SERVICE_HOST):$(PARTY_SERVICE_PORT)"
            {{- end }}
          - name: AUTH_URL
            {{- if .Values.dns.enabled }}
            value: "http://auth.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(AUTH_SERVICE_HOST):$(AUTH_SERVICE_PORT)"
            {{- end }}
          - name: REDIS_HOST
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-host
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_HOST)"
            {{- end }}
          - name: REDIS_PORT
            {{- if .Values.database.managedRedis }}
            valueFrom:
              configMapKeyRef:
                name: redis-config
                key: redis-port
            {{- else }}
            value: "$(REDIS_MASTER_SERVICE_PORT)"
            {{- end}}
          - name: REDIS_DB
            value: "3"
          - name: REPORT_URL
            {{- if .Values.dns.enabled }}
            value: "http://reporting.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(REPORTING_SERVICE_HOST):$(REPORTING_SERVICE_PORT)"
            {{- end }}
          - name: RESPONSE_OPERATIONS_UI_URL
            {{- if .Values.ingress.enabled }}
            value: "https://{{ .Values.ingress.gcpHost }}"
            {{- else }}
            value: "http://localhost:{{.Values.service.port}}"
            {{- end }}
          - name: SAMPLE_URL
            {{- if .Values.dns.enabled }}
            value: "http://sample.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SAMPLE_SERVICE_HOST):$(SAMPLE_SERVICE_PORT)"
            {{- end }}
          - name: SAMPLE_FILE_UPLOADER_URL
            {{- if .Values.dns.enabled }}
            value: "http://sample-file-uploader.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SAMPLE_FILE_UPLOADER_SERVICE_HOST):$(SAMPLE_FILE_UPLOADER_SERVICE_PORT)"
            {{- end }}
          - name: SCHEME
            value: {{ .Values.scheme }}
          - name: SEND_EMAIL_TO_GOV_NOTIFY
            value: "{{ .Values.sendEmailToGovNotify }}"
          - name: SURVEY_URL
            {{- if .Values.dns.enabled }}
            value: "http://survey.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SURVEY_SERVICE_HOST):$(SURVEY_SERVICE_PORT)"
            {{- end }}
          - name: SECURE_MESSAGE_URL
            {{- if .Values.dns.enabled }}
            value: "http://secure-message.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.dns.wellKnownPort }}"
            {{- else }}
            value: "http://$(SECURE_MESSAGE_SERVICE_HOST):$(SECURE_MESSAGE_SERVICE_PORT)"
            {{- end }}
          - name: EQ_VERSION_ENABLED
            value: "{{ .Values.features.v3Enabled }}"
          - name: IS_ROLE_BASED_ACCESS_ENABLED
            value: "{{ .Values.features.isRoleBasedAccessEnabled }}"
          - name: SECURE_MESSAGE_JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: jwt-secret
          - name: UAA_SERVICE_URL
            value: "http://$(UAA_SERVICE_HOST):$(UAA_SERVICE_PORT)"
          - name: UAA_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: rops
                key: client-id
          - name: UAA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: rops
                key: client-secret
          - name: TEST_MODE
            value: "{{- if .Values.test.enabled -}}True{{- else -}}False{{- end -}}"
          - name: WTF_CSRF_ENABLED
            value: "{{- if .Values.test.enabled -}}False{{- else -}}True{{- end -}}"
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
